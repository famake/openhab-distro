
var dart_motion = 0
var motion_2 = 0
var cond_86880 = false
var kjokkenpaa = false
var hanson = false

rule "kommer hjem"
when
    Item hjemme changed to ON
then
    sendCommand(lifx_colorlight_D073D502F5AA_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D50352D9_color, ON)
    sendCommand(lifx_colorlight_D073D50353F2_color, ON)
    sendCommand(lifx_colorlight_D073D503BA98_color, ON)
    sendCommand(lifx_colorlight_D073D503BD25_color, ON)
    sendCommand(lifx_colorlight_D073D503BE21_color, ON)
    sendCommand(lifx_colorlight_D073D503BE6B_color, ON)
    sendCommand(artnet_node_45672867_color, ON)
    sendCommand(artnet_node_b80e6bd6_color, ON)
    sendCommand(artnet_node_c04f10d8_color, ON)
    sendCommand(artnet_node_ea6e6424_color, ON)
end


rule "kommer hjem"
when
    Item hjemme changed to OFF
then
    sendCommand(lifx_colorlight_D073D502F5AA_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D50352D9_color, OFF)
    sendCommand(lifx_colorlight_D073D50353F2_color, OFF)
    sendCommand(lifx_colorlight_D073D503BA98_color, OFF)
    sendCommand(lifx_colorlight_D073D503BD25_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE21_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE6B_color, OFF)
    sendCommand(artnet_node_45672867_color, OFF)
    sendCommand(artnet_node_b80e6bd6_color, OFF)
    sendCommand(artnet_node_c04f10d8_color, OFF)
    sendCommand(artnet_node_ea6e6424_color, OFF)
end


rule "ok"
when
    Item ninjablocks_motion_sensor_1910401a_trigger received update or
    Item ninjablocks_button_62c1330d_trigger received update or
    Item network_device_192_168_1_100_online changed to ON
then
  	//sendCommand(receivernadt748_receiver_45ec6c0c_power, ON)
    sendCommand(lifx_colorlight_D073D502F5AA_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D50352D9_color, ON)
    sendCommand(lifx_colorlight_D073D50353F2_color, ON)
    sendCommand(lifx_colorlight_D073D503BA98_color, ON)
    sendCommand(lifx_colorlight_D073D503BD25_color, ON)
    sendCommand(lifx_colorlight_D073D503BE21_color, ON)
    sendCommand(lifx_colorlight_D073D503BE6B_color, ON)
	sendCommand(artnet_node_45672867_color, ON)
	sendCommand(artnet_node_b80e6bd6_color, ON)
	sendCommand(artnet_node_c04f10d8_color, ON)
	sendCommand(artnet_node_ea6e6424_color, ON)
end

//rule "viftest"
//when
//    Item serialmultifunction_temperature_6e286e8a_temperature changed
//then
//    var cmd = OFF
//    if (serialmultifunction_temperature_6e286e8a_temperature.state > 35) {
//        cmd = ON
//    }    
//    sendCommand(ninjablocks_socket_b66dc026_power, cmd)
//end

rule "Voice control"
when
    Item VoiceCommand received command
then
	var String command = VoiceCommand.state.toString.toLowerCase
	if (command.equals("lys av")) {
	  	sendCommand(home_group_3b5daeb9, OFF)
	}
	else if (command.equals("lys på")) {
	  	sendCommand(home_group_3b5daeb9, ON)
  	}
end


rule "bord lys"
when
    Item artnet_node_f7947bbd_color received command
then
    sendCommand(artnet_node_8db01c40_color, receivedCommand)
end

rule "marius"
when
    Item fa received command
then 
    var x_artnet_node_fbf96f11_color = artnet_node_fbf96f11_color.state
    var x_artnet_node_f7c49632_color = artnet_node_f7c49632_color.state
    
    if (x_artnet_node_fbf96f11_color != OFF) {
        sendCommand(artnet_node_fbf96f11_color, new HSBType(new DecimalType(0.0), new PercentType(100), new PercentType(100)))
    }
    if (x_artnet_node_f7c49632_color != OFF) {
        sendCommand(artnet_node_f7c49632_color, new HSBType(new DecimalType(0.0), new PercentType(100), new PercentType(100)))
    }

    sendCommand(lifx_colorlight_D073D502F5AA_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D50352D9_color, OFF)
    sendCommand(lifx_colorlight_D073D50353F2_color, OFF)
    sendCommand(lifx_colorlight_D073D503BA98_color, OFF)
    sendCommand(lifx_colorlight_D073D503BD25_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE21_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE6B_color, OFF)
    Thread.sleep(500)
    sendCommand(lifx_colorlight_D073D502F5AA_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D50352D9_color, ON)
    sendCommand(lifx_colorlight_D073D50353F2_color, ON)
    sendCommand(lifx_colorlight_D073D503BA98_color, ON)
    sendCommand(lifx_colorlight_D073D503BD25_color, ON)
    sendCommand(lifx_colorlight_D073D503BE21_color, ON)
    sendCommand(lifx_colorlight_D073D503BE6B_color, ON)
    Thread.sleep(500)
    sendCommand(lifx_colorlight_D073D502F5AA_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D50352D9_color, OFF)
    sendCommand(lifx_colorlight_D073D50353F2_color, OFF)
    sendCommand(lifx_colorlight_D073D503BA98_color, OFF)
    sendCommand(lifx_colorlight_D073D503BD25_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE21_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE6B_color, OFF)
    Thread.sleep(500)
    sendCommand(lifx_colorlight_D073D502F5AA_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    sendCommand(lifx_colorlight_D073D50352D9_color, ON)
    sendCommand(lifx_colorlight_D073D50353F2_color, ON)
    sendCommand(lifx_colorlight_D073D503BA98_color, ON)
    sendCommand(lifx_colorlight_D073D503BD25_color, ON)
    sendCommand(lifx_colorlight_D073D503BE21_color, ON)
    sendCommand(lifx_colorlight_D073D503BE6B_color, ON)
    Thread.sleep(500)
    sendCommand(lifx_colorlight_D073D502F5AA_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
    sendCommand(lifx_colorlight_D073D50352D9_color, OFF)
    sendCommand(lifx_colorlight_D073D50353F2_color, OFF)
    sendCommand(lifx_colorlight_D073D503BA98_color, OFF)
    sendCommand(lifx_colorlight_D073D503BD25_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE21_color, OFF)
    sendCommand(lifx_colorlight_D073D503BE6B_color, OFF)
    Thread.sleep(500)
    sendCommand(lifx_colorlight_D073D502F5AA_color, ON)
    sendCommand(lifx_colorlight_D073D50352D9_color, ON)
    sendCommand(lifx_colorlight_D073D50353F2_color, ON)
    sendCommand(lifx_colorlight_D073D503BD25_color, ON)
    sendCommand(lifx_colorlight_D073D503BE21_color, ON)
    
    if (KjokkenBevegelse.state == ON) {
        sendCommand(lifx_colorlight_D073D503BA98_color, ON)
        sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    }
    if (benqprojector_projector_5ad721d1_power.state == OFF) {
        sendCommand(lifx_colorlight_D073D503BE6B_color, ON)
        sendCommand(lifx_colorlight_D073D502F67C_color, ON)
    }
    
    sendCommand(artnet_node_fbf96f11_color, OFF)
    sendCommand(artnet_node_f7c49632_color, OFF)

end


rule "switch channel"
when
    Item sonos_CONNECT_RINCON_000E58A4514001400_control changed from PAUSE to PLAY or
    Item sonos_CONNECT_RINCON_000E58A4514001400_control changed from NULL to PLAY
then
    sendCommand(receivernadt748_receiver_45ec6c0c_source, 6)
end


rule "switch channel2"
when
    Item sonos_CONNECT_RINCON_000E58A4514001400_control changed from PLAY to PAUSE or
    Item sonos_CONNECT_RINCON_000E58A4514001400_control changed from PLAY to NULL
then
    sendCommand(receivernadt748_receiver_45ec6c0c_source, 1)
end

rule "kjøkken motion"
when
    Item KjokkenBevegelse received command
then
    if (receivedCommand == ON && kjokkenpaa == false) {
        sendCommand(lifx_colorlight_D073D503BA98_color, ON)
        sendCommand(lifx_colorlight_D073D502F67C_color, ON)
        sendCommand(artnet_node_fbf96f11_color, ON)
        sendCommand(artnet_node_f7c49632_color, ON)
        sendCommand(sonos_CONNECT_RINCON_000E58A4514001400_add, new StringType("RINCON_000E58D378A401400"))
        kjokkenpaa = true
    }
    else if (receivedCommand == OFF) {
        motion_2++
        Thread.sleep(30000)
        motion_2--
        if (motion_2 == 0 && KjokkenBevegelse.state == OFF) {
            sendCommand(lifx_colorlight_D073D503BA98_color, OFF)
            sendCommand(lifx_colorlight_D073D502F67C_color, OFF)
            sendCommand(artnet_node_fbf96f11_color, OFF)
            sendCommand(artnet_node_f7c49632_color, OFF)
            sendCommand(sonos_CONNECT_RINCON_000E58A4514001400_remove, new StringType("RINCON_000E58D378A401400"))
            kjokkenpaa = false
        }
    }
end


rule "sonos switch"
when
 Item EnOceanStor received command
then
    if (receivedCommand == ON && lifx_colorlight_D073D503BE6B_color.state == OFF) {
        sendCommand(sonos_CONNECT_RINCON_000E58A4514001400_add, new StringType("RINCON_000E58D378A401400"))
    }
    else if (receivedCommand == OFF && lifx_colorlight_D073D503BE6B_color.state == ON) {
        sendCommand(sonos_CONNECT_RINCON_000E58A4514001400_remove, new StringType("RINCON_000E58D378A401400"))
    }
end

rule "lys_av_paa2"
when
    Item EnOceanStor received command or
    Item EnOceanStor2 received command
then
  //  sendCommand(lifx_colorlight_D073D50352D9_color, receivedCommand) //gang 1
  //  sendCommand(lifx_colorlight_D073D503BE21_color, receivedCommand) // gang 2
  //  sendCommand(lifx_colorlight_D073D50353F2_color, receivedCommand) // stuegang
  //  sendCommand(lifx_colorlight_D073D503BA98_color, receivedCommand) // Kjøkken 1
  //  sendCommand(lifx_colorlight_D073D502F67C_color, receivedCommand) // Kjøkken 2
  if (receivedCommand == ON) {
        sendCommand(artnet_node_4ec044e3_color, INCREASE)
  } else {
        sendCommand(artnet_node_4ec044e3_color, DECREASE)
  }
    //sendCommand(artnet_node_fbf96f11_color, receivedCommand)
end


rule "lys_av_paa" 
when
    Item EnOceanStor received command or
    Item LysStue received command 
then
    var level = lifx_colorlight_D073D502F67C_color.state as HSBType
    
    if (receivedCommand == ON && lifx_colorlight_D073D503BE6B_color.state == ON) {
        sendCommand(lifx_colorlight_D073D503BE6B_color, new PercentType(100)) // Stue 3
        sendCommand(lifx_colorlight_D073D502F67C_color, new PercentType(100)) // Stue 2
        sendCommand(lifx_colorlight_d073d503bd25_color, new PercentType(100)) // stue 1
        sendCommand(lifx_colorlight_d073d502f5aa_color, new PercentType(100)) // stuePc
    }
    else if (receivedCommand == OFF && level.getBrightness().intValue() > 90) {
        sendCommand(lifx_colorlight_D073D503BE6B_color, new PercentType(20))//  stue 3
        sendCommand(lifx_colorlight_D073D502F67C_color, new PercentType(20)) // Stue 2
        sendCommand(lifx_colorlight_d073d503bd25_color, new PercentType(20)) // stue 1
        sendCommand(lifx_colorlight_d073d502f5aa_color, new PercentType(20)) // stuePc
    }
    else {
        sendCommand(lifx_colorlight_D073D503BE6B_color, receivedCommand)//  stue 3
        sendCommand(lifx_colorlight_D073D502F67C_color, receivedCommand) // Stue 2
        sendCommand(lifx_colorlight_D073D503BD25_color, receivedCommand) // stue 1
        sendCommand(lifx_colorlight_D073D502F5AA_color, receivedCommand) // stuePc
        sendCommand(artnet_node_466088ca_color, receivedCommand)
    }
    //
    //sendCommand(artnet_node_f7c49632_color, receivedCommand)  
end

